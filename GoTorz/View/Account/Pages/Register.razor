@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using GoTorz.Data
@using GoTorz.Models.User

@inject HttpClient client
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>

<GoTorz.View.Layout.Header/>

<div class="container">

    <h1 class="text-center">Register</h1>
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <StatusMessage Message="@errorMessage" />
            <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="RegisterUser" FormName="register">
                <DataAnnotationsValidator />
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" id="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                    <label for="Input.Email">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                    <label for="Input.Password">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.ConfirmPassword" id="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                    <label for="Input.ConfirmPassword">Confirm Password</label>
                    <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger" />
                </div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
            </EditForm>
        </div>
    </div>
</div>

<GoTorz.View.Layout.Footer/>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    private string? errorMessage;


    public async Task RegisterUser(EditContext editContext)
    {
		if (!string.IsNullOrEmpty(errorMessage))
		{
			errorMessage = null;
		}

		var userInput = new UserInput
        {
            Email = Input.Email,
            Password = Input.Password,
        };

        var response = await client.PostAsJsonAsync("/api/user/register", userInput);

        response.EnsureSuccessStatusCode();

        var strArray = await response.Content.ReadFromJsonAsync<string[]>();

        var userId = strArray[0];
		var error = strArray[1];

        if (string.IsNullOrEmpty(error) && userId != null && userId.Length > 0) {
			NavigationManager.NavigateTo("/Account/Login");
        }
        else
        {
			errorMessage = error;
        }
    }


    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = "";

        [Required]
        [StringLength(100, ErrorMessage = "The {0} must be at least {2} and at max {1} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = "";

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; } = "";
    }
}
